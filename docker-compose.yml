x-tg-bot: &tg-bot
  NODE_ENV: development
x-database: &database
  DB_HOST: database
  DB_NAME: dev_db
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_PORT: 5432

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      <<: *database
    depends_on:
      database:
        condition: service_healthy
  tg-bot:
    build:
      context: ./tg-bot
      dockerfile: Dockerfile.dev
      args:
        NODE_ENV: development
    tty: true
    stdin_open: true
    env_file:
      - .env
    environment:
      <<: *tg-bot
    command: ["yarn", "dev"]
    volumes:
      - ./tg-bot:/usr/src/app-dev
      - node_modules:/usr/src/app-dev/node_modules
    depends_on:
      database:
        condition: service_healthy
  database:
    build:
      context: ./docker/database
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: dev_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_AUTH_METHOD: trust
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "54330:5432"
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 1s
      timeout: 3s
      retries: 30

# volumes
volumes:
  node_modules:
  db_data:
